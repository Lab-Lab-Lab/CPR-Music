name: Test deploy on EC2

on:
  push:
    branches:
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "DEPLOY_DIR=/data/MusicCPRFEProd" >> $GITHUB_ENV
            echo "IMAGE_NAME=frontend:prod" >> $GITHUB_ENV
            echo "CONTAINER_NAME=frontend-prod" >> $GITHUB_ENV
            echo "DOCKERFILE=Dockerfile.prod" >> $GITHUB_ENV
          else
            echo "DEPLOY_DIR=/data/FEActionsTest" >> $GITHUB_ENV
            echo "IMAGE_NAME=frontend:dev" >> $GITHUB_ENV
            echo "CONTAINER_NAME=frontend-dev" >> $GITHUB_ENV
            echo "DOCKERFILE=Dockerfile.dev" >> $GITHUB_ENV
          fi

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e
            echo "Deploying to $DEPLOY_DIR..."

            cd $DEPLOY_DIR
  
            echo "Pulling latest changes..."
            git pull origin ${{ github.ref_name }} 

            echo "Stopping and removing old container"
            docker stop $CONTAINER_NAME || true
            docker rm $CONTAINER_NAME || true

            echo "Building new image..."
            docker build -t $IMAGE_NAME $DOCKERFILE

            echo "Starting new container..."
            docker run -d --name $CONTAINER_NAME -p 3006:3000 $IMAGE_NAME 
          EOF
